#
	The idea behind an early return is to throw an exception,
	then catch it and return its value.
	If the exception is not a return we raise it further.
#

# Macro which allows early returns
# by wrapping body with try-catch, replacing returns with throws
macro early-do (.. body)
	qq
		((f _
			fn return (value)
				throw (li (q return) value)
			try
				do
					..unq body
				catch exception
					if (= (first exception) (q return))
						# exception is a return
						nth exception 1
						# other exceptions pass through
						throw exception
		))

# Macro which allows early breaks in while
# by wrapping the body with try-catch
macro early-while (condition .. body)
	qq
		((f _
			fn break (value)
				throw (li (q break) value)
			try
				while (unq condition)
					..unq body
				catch exception
					if (= (first exception) (q break))
						# exception is a break
						nth exception 1
						# other exceptions pass through
						throw exception
		))
